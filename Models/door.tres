[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeColorFunc" id=1]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0.5, 0.1, 0.1 ) ]
function = 1

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;




void vertex() {
// Output:0

}

void fragment() {
// ColorFunc:3
	vec3 n_in3p0 = vec3(0.50000, 0.10000, 0.10000);
	vec3 n_out3p0;
	{
		vec3 c = n_in3p0;
		float r = (c.r * .393) + (c.g *.769) + (c.b * .189);
		float g = (c.r * .349) + (c.g *.686) + (c.b * .168);
		float b = (c.r * .272) + (c.g *.534) + (c.b * .131);
		n_out3p0 = vec3(r, g, b);
	}

// Output:0
	ALBEDO = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -177.445, -24.683 )
nodes/fragment/3/node = SubResource( 1 )
nodes/fragment/3/position = Vector2( -180, 60 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0 )

[resource]
shader = SubResource( 2 )
